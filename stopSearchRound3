if (!require(rgdal)){
  install.packages("rgdal")
  library(rgdal)
}

if (!require(RColorBrewer)){
  install.package
  library(RColorBrewer)
}

if (!require(leaflet)){
  install.packages("leaflet")
  library(leaflet)
}

setwd("~/Health_R_coding_club")

unzip("Police_Force_Areas_December_2016_Ultra_Generalised_Clipped_Boundaries_in_England_and_Wales.zip", exdir = "~/Health_R_coding_club")

StopSearch <- read.csv("stop-and-search.csv")

policeForce_map_shp <- readOGR("Police_Force_Areas_December_2016_Ultra_Generalised_Clipped_Boundaries_in_England_and_Wales.shp", layer = "Police_Force_Areas_December_2016_Ultra_Generalised_Clipped_Boundaries_in_England_and_Wales", GDAL1_integer64_policy = TRUE)

policeForce_map_shp <- spTransform(counties_map_shp, CRS("+proj=longlat +ellps=GRS80"))

#Lets focus on a ethnicity
StopSearchBlack <- subset(StopSearch, Ethnicity == "Black" & Time=="2017/18", select = c(Geography, Rate.per.1.000.population.by.ethnicity))

levels_map <- merge(policeForce_map_shp, StopSearchBlack, by.x = "ctyua17nm", by.y="Geography")

#bins <- c(1,2,3,4)
colours <- c("#FA2424", "#1BA9F0", "#FFD700", "#59AF56")
pal <- colorFactor(colours, domain= levels_map$Rate.per.1.000.population.by.ethnicity)

count_map <- leaflet(levels_map) %>%
  addPolygons(fillColor = ~pal(Rate.per.1.000.population.by.ethnicity),
              weight = .3,
              opacity = 1,
              color = "#808080",
              dashArray = "1",
              fillOpacity = 0.7,
              highlight = highlightOptions(
                weight = 1.5,
                color = "White",
                dashArray = "",
                fillOpacity = 0.7,
                bringToFront = TRUE)) %>%
  addLegend(pal = pal, values = ~Rate.per.1.000.population.by.ethnicity, opacity = 0.7, title = "Rate per population",
            position = "bottomleft")

count_map
